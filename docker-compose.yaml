version: "3.9"

services:
  redis:
    restart: always
    image: redis

  webapp:
    restart: always
    build: ./
    command: gunicorn parseBuildTools.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
    depends_on:
      - db
    ports:
      - "8000:8000"

  worker:
    restart: always
    build:
      context: ./
    command: [ "celery", "--workdir=./", "-A", "parserBuildTools", "worker"]

  celery-beats:
    restart: always
    build:
      context: ./
    command: [ "celery", "--workdir=./", "-A", "parserBuildTools", "beat", "-l", "info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler" ]


  db:
    image: postgres:13
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: qwerty123
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    ports:
      - "80:80"   # Открываем HTTP для получения сертификатов
      - "443:443" # Открываем HTTPS для защищённого трафика
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Настройка Nginx
      - ./certbot/conf:/etc/letsencrypt  # Для хранения сертификатов
      - ./certbot/www:/var/www/certbot  # Для проверки доменов
    depends_on:
      - web

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt  # Для хранения сертификатов
      - ./certbot/www:/var/www/certbot  # Для проверки доменов
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $!; certbot renew; done'"
